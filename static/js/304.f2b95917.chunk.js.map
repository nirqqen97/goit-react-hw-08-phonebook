{"version":3,"file":"static/js/304.f2b95917.chunk.js","mappings":"gRAOaA,GALYC,EAAAA,EAAAA,IAAH,yFAKDA,EAAAA,EAAAA,GAAH,uB,uCCJLC,EAAWD,EAAAA,EAAAA,KAAH,4FAMRE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,EAAPH,CAAH,mEAUTI,GANQJ,EAAAA,EAAAA,MAAH,0FAMGA,EAAAA,EAAAA,MAAH,uB,8BCZLK,EAAO,WAChB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACOC,GAAOC,EAAAA,EAAAA,MAAPD,KACP,GAAkBE,EAAAA,EAAAA,MAAXC,GAAP,eA4BIC,EAAa,SAACR,EAAME,IALM,SAACE,EAAMK,GAE/B,YADkEC,KAA9C,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMO,MAAK,SAAAC,GAAO,OAAIA,EAAQZ,OAASS,CAArB,IAEnC,CAGDI,CAAkBT,EAAMJ,GAI5BO,EAAQ,CAAEO,GAAIC,IAAAA,WAAoBf,KAAAA,EAAME,OAAAA,IAHtCc,MAAM,GAAD,OAAIhB,EAAJ,2BAIR,EAED,OACU,UAACN,EAAD,CAAUuB,aAAa,MAAMC,SA7BhB,SAACC,GAClBA,EAAEC,iBACF,IAAMR,EAAU,CACdZ,KAAAA,EACAE,OAAAA,GAEFM,EAAWI,GACXS,QAAQC,IAAI,YAAaV,GAEzBT,EAAU,IACVF,EAAQ,IACRkB,EAAEI,OAAOC,OACR,EAiBG,WACA,SAAC3B,EAAD,WACI,SAAC4B,EAAA,EAAD,CAAWC,KAAM,OACV1B,KAAO,OACP2B,SAvCM,SAACR,GACtBlB,EAAQkB,EAAES,cAAcnB,MAC3B,EAsCkBoB,QAAS,yHACTC,MAAS,yIACTrB,MAAST,EACTc,GAAG,eACHiB,MAAM,OACNC,QAAQ,SACRC,UAAQ,OAGnB,SAACpC,EAAD,WACI,SAAC4B,EAAA,EAAD,CAAWC,KAAM,OACV1B,KAAO,YACP2B,SAjDO,SAACR,GACvBhB,EAAUgB,EAAES,cAAcnB,MAC7B,EAgDkBoB,QAAW,yFACXpB,MAASP,EACTY,GAAG,eACHiB,MAAM,QACNC,QAAQ,SACRF,MAAS,oGAGpB,SAACnC,EAAD,CAAWqC,QAAQ,YAAYN,KAAK,SAApC,sBAIX,E,oBCvEY7B,GALQJ,EAAAA,EAAAA,MAAH,0FAKGA,EAAAA,EAAAA,MAAH,uBCALyC,EAAc,WACvB,IAAMC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,GACrBC,GAAWC,EAAAA,EAAAA,MAKpB,OACQ,SAAC,EAAD,WACI,SAACd,EAAA,EAAD,CACAO,QAAQ,SACRD,MAAM,wBACNS,QARe,SAAC,GAAgB,IAAfjB,EAAc,EAAdA,OAElBe,GAASG,EAAAA,EAAAA,GAAkBlB,EAAOd,OAAQ,EAOzCoB,QAAS,yHACTpB,MAAQ0B,KAEpB,ECdKO,GAAeC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IAEbC,EAAe,WAC1B,IAAMN,GAAWC,EAAAA,EAAAA,MACjB,GAAiClC,EAAAA,EAAAA,MAAzBwC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,UACbX,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,GAK3B,OACE,iCACE,SAACvC,EAAD,KACA,SAACN,EAAD,wBACA,SAAC0C,EAAD,CAAaM,QARC,SAAC/B,GACjB6B,GAASG,EAAAA,EAAAA,GAAkBhC,GAC5B,EAMoCA,MAAO0B,IACvCU,IAAa,SAACrD,EAAD,yBACbsD,IACC,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAACN,EAAD,QAKT,EAED,G,oECjCO,IAAML,EAAgB,SAAAY,GAAK,OAAKA,EAAMd,OAAOe,MAAlB,C,oCCAlCC,EAAOC,QAAU,EAAjBD,K,oCCCA,IAGIE,EACAC,EAEAC,EANAC,EAAiBC,EAAQ,MAEzBC,EAAW,mEAMf,SAASlC,IACL+B,GAAW,CACd,CAED,SAASI,EAAcC,GACnB,GAAKA,GAQL,GAAIA,IAAeP,EAAnB,CAIA,GAAIO,EAAWC,SAAWH,EAASG,OAC/B,MAAM,IAAIC,MAAM,uCAAyCJ,EAASG,OAAS,qCAAuCD,EAAWC,OAAS,gBAAkBD,GAG5J,IAAIG,EAASH,EAAWI,MAAM,IAAI7B,QAAO,SAAS8B,EAAMC,EAAKC,GAC1D,OAAOD,IAAQC,EAAIC,YAAYH,EACjC,IAED,GAAIF,EAAOF,OACP,MAAM,IAAIC,MAAM,uCAAyCJ,EAASG,OAAS,yDAA2DE,EAAOM,KAAK,OAGtJhB,EAAWO,EACXpC,GAfC,OATO6B,IAAaK,IACbL,EAAWK,EACXlC,IAuBX,CAiCD,SAAS8C,IACL,OAAIf,IAGJA,EAtBJ,WACSF,GACDM,EAAcD,GAQlB,IALA,IAGIa,EAHAC,EAAcnB,EAASW,MAAM,IAC7BS,EAAc,GACdC,EAAIlB,EAAemB,YAGhBH,EAAYX,OAAS,GACxBa,EAAIlB,EAAemB,YACnBJ,EAAiBK,KAAKC,MAAMH,EAAIF,EAAYX,QAC5CY,EAAYK,KAAKN,EAAYO,OAAOR,EAAgB,GAAG,IAE3D,OAAOE,EAAYJ,KAAK,GAC3B,CAMcW,GAEd,CAgBD7B,EAAOC,QAAU,CACb6B,IALJ,WACE,OAAO5B,GAAYK,CACpB,EAIGwB,WAvDJ,SAAoBtB,GAEhB,OADAD,EAAcC,GACPP,CACV,EAqDG8B,KAnDJ,SAAiBA,GACb3B,EAAe2B,KAAKA,GAChB7B,IAAiB6B,IACjB3D,IACA8B,EAAe6B,EAEtB,EA8CGC,OAbJ,SAAgBC,GAEZ,OADuBf,IACCe,EAC3B,EAWG9B,SAAUe,E,oCCnGd,IAaIgB,EAGAC,EAhBAC,EAAW/B,EAAQ,MACRA,EAAQ,MA0CvBN,EAAOC,QArBP,SAAeqC,GACX,IAAIC,EAAM,GAENC,EAAUf,KAAKC,MAAmC,MAA5Be,KAAKC,MAnBjB,gBAkCd,OAbIF,IAAYJ,EACZD,KAEAA,EAAU,EACVC,EAAkBI,GAGtBD,GAAYF,EAxBF,GAyBVE,GAAYF,EAASC,GACjBH,EAAU,IACVI,GAAYF,EAASF,IAEzBI,GAAYF,EAASG,EAExB,C,oCCzCD,IAAItC,EAAWI,EAAQ,MACnBqC,EAASrC,EAAQ,MACjBsC,EAAStC,EAAQ,MAgBrBN,EAAOC,QAdP,SAAkBlD,GAMd,IALA,IACI8F,EADAC,EAAc,EAGdP,EAAM,IAEFM,GACJN,GAAYK,EAAOD,EAAQzC,EAAS4B,MAAO,GAC3Ce,EAAO9F,EAAU0E,KAAKsB,IAAI,GAAID,EAAc,GAC5CA,IAEJ,OAAOP,CACV,C,oCChBD,IAAIrC,EAAWI,EAAQ,MACnB0C,EAAQ1C,EAAQ,MAChB2C,EAAU3C,EAAQ,MAMlBgC,EAAkBhC,EAAQ,OAA+B,EAyC7D,SAAS+B,IACP,OAAOW,EAAMV,EACd,CAGDtC,EAAOC,QAAUoC,EACjBrC,EAAOC,QAAQoC,SAAWA,EAC1BrC,EAAOC,QAAQ+B,KAxCf,SAAckB,GAEV,OADAhD,EAAS8B,KAAKkB,GACPlD,EAAOC,OACjB,EAsCDD,EAAOC,QAAQkD,OA9Bf,SAAgBC,GAEZ,OADAd,EAAkBc,EACXpD,EAAOC,OACjB,EA4BDD,EAAOC,QAAQ8B,WArBf,SAAoBsB,GAKhB,YAJsB9F,IAAlB8F,GACAnD,EAAS6B,WAAWsB,GAGjBnD,EAASE,UACnB,EAgBDJ,EAAOC,QAAQgD,QAAUA,C,oCC5DzB,IAAI/C,EAAWI,EAAQ,MAavBN,EAAOC,QAXP,SAAmBtC,GACf,SAAKA,GAAoB,kBAAPA,GAAmBA,EAAG+C,OAAS,KAI7B,IAAI4C,OAAO,KAC7BpD,EAAS4B,MAAMyB,QAAQ,uBAAwB,QACjD,KACsBC,KAAK7F,EAC9B,C,gCCVD,IAEI8F,EAFAC,EAA2B,kBAAXC,SAAwBA,OAAOD,QAAUC,OAAOC,UAahEH,EATCC,GAAWA,EAAOG,gBASN,SAASC,GAClB,OAAOJ,EAAOG,gBAAgB,IAAIE,WAAWD,GAChD,EAVY,SAASA,GAElB,IADA,IAAIE,EAAQ,GACHC,EAAI,EAAGA,EAAIH,EAAMG,IACtBD,EAAMrC,KAAKF,KAAKC,MAAsB,IAAhBD,KAAKkB,WAE/B,OAAOqB,CACV,EAOLhE,EAAOC,QAAUwD,C,gCCfjB,IAAIzB,EAAO,EAgBXhC,EAAOC,QAAU,CACbuB,UAVJ,WAEI,OADAQ,GAAe,KAAPA,EAAc,OAAS,QAClB,MAChB,EAQGA,KANJ,SAAiBkC,GACblC,EAAOkC,CACV,E,gCCjBDlE,EAAOC,QAAU,C,mBCCjBD,EAAOC,QAAU,SAAU0C,EAAQzC,EAAU4D,GAwB3C,IAlBA,IAAIK,GAAQ,GAAK1C,KAAKtD,IAAI+B,EAASQ,OAAS,GAAKe,KAAK2C,KAAO,EAezDC,KAAU,IAAMF,EAAOL,EAAO5D,EAASQ,QACvC/C,EAAK,KAMP,IAHA,IAAIqG,EAAQrB,EAAO0B,GAEfJ,EAAII,EACDJ,KAKL,IAFAtG,GAAMuC,EAAS8D,EAAMC,GAAKE,IAAS,IAE5BzD,UAAYoD,EAAM,OAAOnG,CAGrC,C","sources":["ContactsPage/ContactsPage.styled.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","components/InputFilter/InputFilter.styled.jsx","components/InputFilter/InputFilter.jsx","ContactsPage/ContactsPage.jsx","redux/Contacts/Contacts.selector.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n    margin-left :15px;\n    margin-right :15px;\n    width:1200px`;\n\nexport const Title = styled.h1``","import styled from '@emotion/styled';\nimport Button from '@mui/material/Button';\n\nexport const FormWrap = styled.form`\n    display: flex;\n    flex-direction: column;\n    gap:15px;\n    `;\n\nexport const SubmitBtn = styled(Button)`\n    width:100px;    \n    text-align:center`;\n\nexport const Input = styled.input`\n    display: flex;\n    flex-direction: column;\n    width: 200px;`;\n\n    \nexport const Label = styled.label``;\n\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\nimport {FormWrap,SubmitBtn, Label} from \"./Form.styled\";\nimport { usePostContactsMutation, useFetchContactsQuery } from \"redux/rtk-contacts/rtk-contacts.api\";\nimport TextField from '@mui/material/TextField';\n\nexport const Form = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const {data}= useFetchContactsQuery()\n    const [addUser] = usePostContactsMutation()\n\n    const handleNameChange = (e) =>{\n        setName(e.currentTarget.value)\n    }\n    const handlePhoneChange = (e) =>{\n        setNumber(e.currentTarget.value)\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const contact = {\n          name,\n          number\n        }\n        addContact(contact);\n        console.log('contact: ', contact);\n\n        setNumber(\"\");\n        setName('');\n        e.target.reset()\n        }\n       \n         \n        const checkIsInContacts = (data, value) => {\n          const checked = data?.find(contact => contact.name === value) !== undefined;\n          return checked\n        }\n        \n  const addContact = (name, number) => {\n    if (checkIsInContacts(data, name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    addUser({ id: shortid.generate(), name, number });\n  };\n\n  return(\n            <FormWrap autoComplete=\"off\" onSubmit={handleSubmit}>\n            <Label>\n                <TextField type={\"text\"} \n                       name ={\"name\"}\n                       onChange ={handleNameChange}\n                       pattern={\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"}\n                       title = {\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"}\n                       value = {name}\n                       id=\"filled-basic\" \n                       label=\"Name\" \n                       variant=\"filled\"\n                       required/>\n                       \n            </Label>\n            <Label>\n                <TextField type={\"text\"} \n                       name ={\"telephone\"}\n                       onChange ={handlePhoneChange}\n                       pattern = {\"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\"}\n                       value = {number}\n                       id=\"filled-basic\" \n                       label=\"Phone\" \n                       variant=\"filled\"\n                       title = {\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"}/>\n                       \n            </Label>\n            <SubmitBtn variant=\"contained\" type=\"submit\">Submit</SubmitBtn>\n        </FormWrap>\n        )\n    \n}\nForm.propTypes = {\n    addContact: PropTypes.func,\n}","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n    display: flex;\n    flex-direction: column;\n    width: 200px;`\n\nexport const Label = styled.label``","import PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFilters } from \"redux/Contacts/Contacts.selector\";\nimport { usersSearchAction } from \"redux/Contacts/Contacts.slice\";\nimport {Label } from \"./InputFilter.styled\";\nimport TextField from '@mui/material/TextField';\n\nexport const InputFilter = () => {\n    const filter = useSelector(selectFilters);\n    const dispatch = useDispatch()\n \n        const handeInput =  ({target, }) => {\n            \n            dispatch(usersSearchAction(target.value))}\n return ( \n         <Label>\n             <TextField\n             variant=\"filled\" \n             label=\"Find contacts by name\" \n             onInput={handeInput}\n             pattern={\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"}\n             value ={filter}/>\n         </Label>)\n}\n\nInputFilter.propTypes = {\n    addFilter: PropTypes.func\n}","import React, { lazy, Suspense } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Title } from './ContactsPage.styled';\nimport { Form } from '../components/Form/Form';\nimport { InputFilter } from 'components/InputFilter/InputFilter';\nimport { selectFilters } from 'redux/Contacts/Contacts.selector';\nimport { usersSearchAction } from 'redux/Contacts/Contacts.slice';\nimport { useFetchContactsQuery } from 'redux/rtk-contacts/rtk-contacts.api';\n\nconst LazyContacts = lazy(() => import('../components/Contacts/Contacts'));\n\nexport const ContactsPage = () => {\n  const dispatch = useDispatch();\n  const { isLoading, isSuccess } = useFetchContactsQuery();\n  const filter = useSelector(selectFilters);\n  const addFilter = (value) => {\n    dispatch(usersSearchAction(value));\n  };\n\n  return (\n    <>\n      <Form />\n      <Title>Contacts</Title>\n      <InputFilter onInput={addFilter} value={filter} />\n      {isLoading && <Title>Loading...</Title>}\n      {isSuccess && (\n        <Suspense fallback={<div>Loading...</div>}>\n          <LazyContacts />\n        </Suspense>\n      )}\n    </>\n  );\n};\n\nexport default ContactsPage;\n","\nexport const selectFilters = state =>  state.filter.search\n\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["Title","styled","FormWrap","SubmitBtn","Button","Label","Form","useState","name","setName","number","setNumber","data","useFetchContactsQuery","usePostContactsMutation","addUser","addContact","value","undefined","find","contact","checkIsInContacts","id","shortid","alert","autoComplete","onSubmit","e","preventDefault","console","log","target","reset","TextField","type","onChange","currentTarget","pattern","title","label","variant","required","InputFilter","filter","useSelector","selectFilters","dispatch","useDispatch","onInput","usersSearchAction","LazyContacts","lazy","ContactsPage","isLoading","isSuccess","Suspense","fallback","state","search","module","exports","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","setCharacters","_alphabet_","length","Error","unique","split","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","counter","previousSeconds","generate","clusterWorkerId","str","seconds","Date","now","random","format","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","RegExp","replace","test","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","_seed_","mask","LN2","step"],"sourceRoot":""}